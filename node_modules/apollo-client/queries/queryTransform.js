"use strict";
var cloneDeep = require('lodash.clonedeep');
function addFieldToSelectionSet(fieldName, selectionSet) {
    if (selectionSet == null || selectionSet.selections == null) {
        return selectionSet;
    }
    var fieldAst = {
        kind: 'Field',
        alias: null,
        name: {
            kind: 'Name',
            value: fieldName,
        },
    };
    var alreadyHasThisField = false;
    selectionSet.selections.map(function (selection) {
        if (selection.kind === 'Field' || selection.kind === 'InlineFragment') {
            addTypenameToSelectionSet(selection.selectionSet);
        }
        if (selection.kind === 'Field' && selection.name.value === fieldName) {
            alreadyHasThisField = true;
        }
    });
    if (!alreadyHasThisField) {
        selectionSet.selections.push(fieldAst);
    }
    return selectionSet;
}
exports.addFieldToSelectionSet = addFieldToSelectionSet;
function addTypenameToSelectionSet(selectionSet) {
    return addFieldToSelectionSet('__typename', selectionSet);
}
exports.addTypenameToSelectionSet = addTypenameToSelectionSet;
function addTypenameToQuery(queryDef) {
    var queryClone = cloneDeep(queryDef);
    this.addTypenameToSelectionSet(queryClone.selectionSet);
    return queryClone;
}
exports.addTypenameToQuery = addTypenameToQuery;
function applyTransformerToOperation(queryDef, queryTransformer) {
    var queryClone = cloneDeep(queryDef);
    queryTransformer(queryClone.selectionSet);
    return queryClone;
}
exports.applyTransformerToOperation = applyTransformerToOperation;
//# sourceMappingURL=queryTransform.js.map